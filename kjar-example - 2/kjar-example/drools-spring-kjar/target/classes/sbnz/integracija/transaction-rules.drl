package sbnz.integracija;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.ThreadLocalRandom.*;

import demo.facts.User;
import demo.facts.Transaction;
import java.util.Map;
import java.util.HashMap;
import java.util.Comparator;
import java.util.Collections;
import java.util.stream.Collectors;

rule "Upada u pravila"
when
    $user: User($userTransactions: transactions,role==Role.USER)
then
    System.out.println("Upada u pravila");
end

rule "Above average user transaction amount"
when
    $currentTransaction : Transaction(safeTransaction==false)
    $user: User($userTransactions: transactions,role==Role.USER)
    $transaction: Transaction($amount: amountTrans) from $userTransactions

    $avgAmount: Number(doubleValue > 0) from accumulate(
                             $s: Transaction(
                                 ) from $userTransactions ,
                                 init(double count = 0.0;),
                                 action(count += $s.getAmountTrans();),
                                 reverse(count -= $s.getAmountTrans();),
                                 result(count)
                            )
    eval($currentTransaction.getAmountTrans() > $avgAmount.doubleValue()*1.5)
then
    modify($currentTransaction){setSuspicious(true)};
    System.out.println("Transaction " + $currentTransaction.getId() + " is suspicious because amount is above user average.");
end

